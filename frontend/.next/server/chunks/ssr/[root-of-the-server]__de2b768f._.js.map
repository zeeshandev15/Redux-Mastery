{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hassan%20Laptop%20Point/Desktop/current-projects/redux-mastery-kit/frontend/src/lib/axios/axiosInstance.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:8001\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// smart interceptor\r\naxiosInstance.interceptors.request.use((config) => {\r\n  if (config.data instanceof FormData) {\r\n    config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport default axiosInstance;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,oBAAoB;AACpB,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACtC,IAAI,OAAO,IAAI,YAAY,UAAU;QACnC,OAAO,OAAO,CAAC,eAAe,GAAG;IACnC;IAEA,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hassan%20Laptop%20Point/Desktop/current-projects/redux-mastery-kit/frontend/src/lib/api/customerApi.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../axios/axiosInstance\";\r\n\r\n// createCustomer\r\nexport const createCustomer = createAsyncThunk(\r\n  \"create/customer\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const { data: result } = await axiosInstance.post(\"/api/customer\");\r\n      return result;\r\n    } catch (error: any) {\r\n      const errorMessage =\r\n        error?.response.data.message || error.message || \"Something Went Wrong\";\r\n      return thunkAPI.rejectWithValue(errorMessage);\r\n    }\r\n  }\r\n);\r\n\r\n// fetchCustomer\r\nexport const fetchCustomer = createAsyncThunk(\r\n  \"fetch/customer\",\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const { data: result } = await axiosInstance.get(\"/api/customer\");\r\n      return result;\r\n    } catch (error: any) {\r\n      const errormessage =\r\n        error?.response.data.message || error.message || \"Something went wrong\";\r\n      return thunkAPI.rejectWithValue(errormessage);\r\n    }\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGO,MAAM,iBAAiB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAC3C,mBACA,OAAO,GAAG;IACR,IAAI;QACF,MAAM,EAAE,MAAM,MAAM,EAAE,GAAG,MAAM,oIAAA,CAAA,UAAa,CAAC,IAAI,CAAC;QAClD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,MAAM,eACJ,OAAO,SAAS,KAAK,WAAW,MAAM,OAAO,IAAI;QACnD,OAAO,SAAS,eAAe,CAAC;IAClC;AACF;AAIK,MAAM,gBAAgB,CAAA,GAAA,2LAAA,CAAA,mBAAgB,AAAD,EAC1C,kBACA,OAAO,GAAG;IACR,IAAI;QACF,MAAM,EAAE,MAAM,MAAM,EAAE,GAAG,MAAM,oIAAA,CAAA,UAAa,CAAC,GAAG,CAAC;QACjD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,MAAM,eACJ,OAAO,SAAS,KAAK,WAAW,MAAM,OAAO,IAAI;QACnD,OAAO,SAAS,eAAe,CAAC;IAClC;AACF","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hassan%20Laptop%20Point/Desktop/current-projects/redux-mastery-kit/frontend/src/redux/hooks.ts"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch } from \"./store\";\r\nimport { RootState } from \"./rootReducer\";\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":[],"mappings":";;;;AAAA;;AAIO,MAAM,iBAAoC,8IAAA,CAAA,cAAW;AACrD,MAAM,iBAAkD,8IAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hassan%20Laptop%20Point/Desktop/current-projects/redux-mastery-kit/frontend/src/app/customers/page.tsx"],"sourcesContent":["import { fetchCustomer } from \"@/lib/api/customerApi\";\r\nimport { useAppDispatch, useAppSelector } from \"@/redux/hooks\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst Customer = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { customers, loading, error } = useAppSelector(\r\n    (state) => state.customers\r\n  );\r\n  console.log(\"ðŸš€ ~ Customer ~ customers:\", customers);\r\n  useEffect(() => {\r\n    dispatch(fetchCustomer());\r\n  }, [dispatch]);\r\n  return <div>This is our customers</div>;\r\n};\r\n\r\nexport default Customer;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,WAAW;IACf,MAAM,WAAW,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD;IAC9B,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD,EACjD,CAAC,QAAU,MAAM,SAAS;IAE5B,QAAQ,GAAG,CAAC,8BAA8B;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,CAAA,GAAA,gIAAA,CAAA,gBAAa,AAAD;IACvB,GAAG;QAAC;KAAS;IACb,qBAAO,8OAAC;kBAAI;;;;;;AACd;uCAEe","debugId":null}}]
}